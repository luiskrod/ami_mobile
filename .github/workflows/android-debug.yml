name: Android Debug APK
on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      # Needed by patch-package (if used during postinstall)
      - name: Install OS deps
        run: sudo apt-get update && sudo apt-get install -y patch

      - uses: actions/setup-node@v4
        with:
          node-version: 22.18.0
          cache: npm

      - name: Install JS deps (app)
        run: npm ci --no-audit --no-fund

      - name: Build local plugin (if present)
        run: |
          if [ -d cordova-plugin-moodleapp ]; then
            cd cordova-plugin-moodleapp
            npm ci || true
            npm run build || true
            cd ..
          fi

      # Web build is optional when server.url is set, but harmless to keep
      - name: Web build (www/)
        run: npx --yes @ionic/cli@latest ionic build || mkdir -p www

      - name: Install Capacitor Android (no-save)
        run: npm i --no-save @capacitor/android@latest

      # Ensure the Cordova plugin has the file Capacitor expects; create a stub if no build step exists
      - name: Build/prepare cordova-plugin-moodleapp
        run: |
          if [ -d cordova-plugin-moodleapp ]; then
            cd cordova-plugin-moodleapp
            npm ci || true
            if npm run -s | grep -qE '(^|\s)build(\s|:)'; then
              npm run build || true
            elif npm run -s | grep -qE '(^|\s)prepare(\s|:)'; then
              npm run prepare || true
            elif [ -f gulpfile.js ]; then
              npx --yes gulp || true
            fi
            mkdir -p www
            [ -f www/index.js ] || echo "/* Moodle app Cordova bridge (stub for CI) */" > www/index.js
            cd ..
          fi

      - name: Add Android platform
        run: npx --yes @capacitor/cli@latest add android

      # Capacitor writes JSON here even if webDir is empty because server.url is set
      - name: Prepare Android assets dir
        run: |
          mkdir -p android/app/src/main/assets/public
          mkdir -p android/app/src/main/assets

      - name: Capacitor sync android
        run: npx --yes @capacitor/cli@latest sync android

      # Enforce AndroidX/Jetifier (helps when AAR/JAR deps still reference support libs)
      - name: Enforce AndroidX flags
        run: |
          echo "android.useAndroidX=true" >> android/gradle.properties
          echo "android.enableJetifier=true" >> android/gradle.properties

      # Exclude any lingering com.android.support deps at :app level (safe/idempotent)
      - name: Exclude legacy support libs in :app
        run: |
          FILE="android/app/build.gradle"
          if ! grep -q "CI_EXCLUDE_SUPPORT_BEGIN" "$FILE"; then
            printf '\n/** CI_EXCLUDE_SUPPORT_BEGIN **/\nconfigurations.configureEach {\n  exclude group: "com.android.support"\n}\n/** CI_EXCLUDE_SUPPORT_END **/\n' >> "$FILE"
          fi

      # ðŸ”§ Patch QRScanner source import to AndroidX (Jetifier doesn't touch java sources)
      - name: Patch QRScanner to AndroidX
        run: |
          SRC="android/capacitor-cordova-android-plugins/src/main/java/com/bitpay/cordova/qrscanner/QRScanner.java"
          if [ -f "$SRC" ]; then
            sed -i 's@android\.support\.v4\.app\.ActivityCompat@androidx.core.app.ActivityCompat@g' "$SRC"
          fi

      # Ensure androidx.core is on the classpath (ActivityCompat lives here)
      - name: Ensure androidx.core dependency
        run: |
          APP="android/app/build.gradle"
          if ! grep -q "androidx.core:core" "$APP"; then
            # Insert after 'dependencies {' the first time
            sed -i '/dependencies\s*{/a \    implementation "androidx.core:core:1.13.1"' "$APP"
          fi

      # Use JDK 21 (project compiles with source/target 21)
      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "21"

      - name: Show Java version
        run: java -version

      - uses: android-actions/setup-android@v3

      - name: Accept licenses & install SDK pieces
        run: |
          yes | sdkmanager --licenses >/dev/null
          sdkmanager "platforms;android-34" "build-tools;34.0.0" "platform-tools"

      - name: Ensure gradlew is executable
        run: chmod +x android/gradlew

      # Make Gradle use the setup-java JDK
      - name: Force Gradle to use this JDK
        run: |
          echo "" >> android/gradle.properties
          echo "# CI: use setup-java JDK" >> android/gradle.properties
          echo "org.gradle.java.home=${JAVA_HOME}" >> android/gradle.properties

      # Optional diagnostics if something still conflicts
      - name: Dependency tree (debug)
        run: |
          cd android
          ./gradlew :app:dependencies --configuration debugRuntimeClasspath --no-daemon || true
          cd ..

      - name: Build debug APK
        run: |
          cd android
          ./gradlew --no-daemon assembleDebug

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: moodleapp-debug
          path: android/app/build/outputs/apk/debug/app-debug.apk

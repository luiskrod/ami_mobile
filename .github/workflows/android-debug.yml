name: Android Debug APK
on:
  workflow_dispatch:
  push: { branches: [ main ] }

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install OS deps
        run: sudo apt-get update && sudo apt-get install -y patch

      - uses: actions/setup-node@v4
        with: { node-version: 22.18.0, cache: 'npm' }

      - name: Install JS deps (app)
        run: npm ci --no-audit --no-fund

      - name: Build local plugin (if present)
        run: |
          if [ -d cordova-plugin-moodleapp ]; then
            cd cordova-plugin-moodleapp
            npm ci || true
            npm run build || true
            cd ..
          fi

      # Web build is optional with server.url, but harmless (and creates www/ if needed)
      - name: Web build (www/)
        run: npx --yes @ionic/cli@latest ionic build || mkdir -p www

      - name: Install Capacitor Android (no-save)
        run: npm i --no-save @capacitor/android@latest

      - name: Build/prepare cordova-plugin-moodleapp
        run: |
          if [ -d cordova-plugin-moodleapp ]; then
            cd cordova-plugin-moodleapp
            npm ci || true
            # Try common build/prepare commands if they exist
            if npm run -s | grep -qE '(^|\s)build(\s|:)'; then
              npm run build || true
            elif npm run -s | grep -qE '(^|\s)prepare(\s|:)'; then
              npm run prepare || true
            elif [ -f gulpfile.js ]; then
              npx --yes gulp || true
            fi
            # Ensure expected artifact exists even if there's no build step
            mkdir -p www
            if [ ! -f www/index.js ]; then
              echo "/* Moodle app Cordova bridge (stub for CI) */" > www/index.js
            fi
            cd ..
          fi

      - name: Add Android platform
        run: npx --yes @capacitor/cli@latest add android

      # Create assets directories so Capacitor can drop its JSON files there
      - name: Prepare Android assets dir
        run: |
          mkdir -p android/app/src/main/assets/public
          mkdir -p android/app/src/main/assets

      - name: Capacitor sync android
        run: npx --yes @capacitor/cli@latest sync android

      # âœ… Fix duplicate resource attrs by enforcing AndroidX/Jetifier and excluding old support libs
      - name: Enforce AndroidX / exclude legacy support libs
        run: |
          echo "android.useAndroidX=true" >> android/gradle.properties
          echo "android.enableJetifier=true" >> android/gradle.properties
          cat >> android/build.gradle <<'GRADLE'
            allprojects {
              subprojects {
                configurations.configureEach {
                  exclude group: "com.android.support"
                }
              }
            }
            GRADLE

      - uses: actions/setup-java@v4
        with: { distribution: 'temurin', java-version: '17' }

      - uses: android-actions/setup-android@v3

      - name: Accept licenses & install SDK pieces
        run: |
          yes | sdkmanager --licenses >/dev/null
          sdkmanager "platforms;android-34" "build-tools;34.0.0" "platform-tools"

      - name: Ensure gradlew is executable
        run: chmod +x android/gradlew

      # (Optional) Print dependency tree to help debug if build fails again
      - name: Dependency tree (debug)
        run: |
          cd android
          ./gradlew :app:dependencies --configuration debugRuntimeClasspath --no-daemon
          cd ..

      - name: Build debug APK
        run: |
          cd android
          ./gradlew --no-daemon assembleDebug

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: moodleapp-debug
          path: android/app/build/outputs/apk/debug/app-debug.apk

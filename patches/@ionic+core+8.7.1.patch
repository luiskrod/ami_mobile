diff --git a/node_modules/@ionic/core/components/item.js b/node_modules/@ionic/core/components/item.js
index ec9ab81..a384b35 100644
--- a/node_modules/@ionic/core/components/item.js
+++ b/node_modules/@ionic/core/components/item.js
@@ -139,7 +139,7 @@ const Item = /*@__PURE__*/ proxyCustomElement(class Item extends HTMLElement {
     // inputs, then those need to individually get each click
     hasCover() {
         const inputs = this.el.querySelectorAll('ion-checkbox, ion-datetime, ion-select, ion-radio');
-        return inputs.length === 1 && !this.multipleInputs;
+        return inputs.length === 1;
     }
     // If the item has an href or button property it will render a native
     // anchor or button that is clickable
diff --git a/node_modules/@ionic/core/components/popover.js b/node_modules/@ionic/core/components/popover.js
index 56b1107..560b1d6 100644
--- a/node_modules/@ionic/core/components/popover.js
+++ b/node_modules/@ionic/core/components/popover.js
@@ -763,8 +763,10 @@ const iosEnterAnimation = (baseEl, opts) => {
     const { event: ev, size, trigger, reference, side, align } = opts;
     const doc = baseEl.ownerDocument;
     const isRTL = doc.dir === 'rtl';
-    const bodyWidth = doc.defaultView.innerWidth;
-    const bodyHeight = doc.defaultView.innerHeight;
+    // Patched: use document.body.clientXXX instead of doc.defaultView.innerXXXX because the latter doesn't return the correct
+    // dimensions when the `zoom` CSS property is being used.
+    const bodyWidth = document.body.clientWidth;
+    const bodyHeight = document.body.clientHeight;
     const root = getElementRoot(baseEl);
     const contentEl = root.querySelector('.popover-content');
     const arrowEl = root.querySelector('.popover-arrow');
@@ -884,8 +886,10 @@ const mdEnterAnimation = (baseEl, opts) => {
     const { event: ev, size, trigger, reference, side, align } = opts;
     const doc = baseEl.ownerDocument;
     const isRTL = doc.dir === 'rtl';
-    const bodyWidth = doc.defaultView.innerWidth;
-    const bodyHeight = doc.defaultView.innerHeight;
+    // Patched: use document.body.clientXXX instead of doc.defaultView.innerXXXX because the latter doesn't return the correct
+    // dimensions when the `zoom` CSS property is being used.
+    const bodyWidth = document.body.clientWidth;
+    const bodyHeight = document.body.clientHeight;
     const root = getElementRoot(baseEl);
     const contentEl = root.querySelector('.popover-content');
     const referenceSizeEl = trigger || ((_a = ev === null || ev === void 0 ? void 0 : ev.detail) === null || _a === void 0 ? void 0 : _a.ionShadowTarget) || (ev === null || ev === void 0 ? void 0 : ev.target);
diff --git a/node_modules/@ionic/core/dist/cjs/ion-item_8.cjs.entry.js b/node_modules/@ionic/core/dist/cjs/ion-item_8.cjs.entry.js
index 4ce05a4..cc5562b 100644
--- a/node_modules/@ionic/core/dist/cjs/ion-item_8.cjs.entry.js
+++ b/node_modules/@ionic/core/dist/cjs/ion-item_8.cjs.entry.js
@@ -137,7 +137,7 @@ const Item = class {
     // inputs, then those need to individually get each click
     hasCover() {
         const inputs = this.el.querySelectorAll('ion-checkbox, ion-datetime, ion-select, ion-radio');
-        return inputs.length === 1 && !this.multipleInputs;
+        return inputs.length === 1;
     }
     // If the item has an href or button property it will render a native
     // anchor or button that is clickable
diff --git a/node_modules/@ionic/core/dist/cjs/ion-popover.cjs.entry.js b/node_modules/@ionic/core/dist/cjs/ion-popover.cjs.entry.js
index 2d6c773..1c92c34 100644
--- a/node_modules/@ionic/core/dist/cjs/ion-popover.cjs.entry.js
+++ b/node_modules/@ionic/core/dist/cjs/ion-popover.cjs.entry.js
@@ -766,8 +766,10 @@ const iosEnterAnimation = (baseEl, opts) => {
     const { event: ev, size, trigger, reference, side, align } = opts;
     const doc = baseEl.ownerDocument;
     const isRTL = doc.dir === 'rtl';
-    const bodyWidth = doc.defaultView.innerWidth;
-    const bodyHeight = doc.defaultView.innerHeight;
+    // Patched: use document.body.clientXXX instead of doc.defaultView.innerXXXX because the latter doesn't return the correct
+    // dimensions when the `zoom` CSS property is being used.
+    const bodyWidth = document.body.clientWidth;
+    const bodyHeight = document.body.clientHeight;
     const root = helpers.getElementRoot(baseEl);
     const contentEl = root.querySelector('.popover-content');
     const arrowEl = root.querySelector('.popover-arrow');
@@ -887,8 +889,10 @@ const mdEnterAnimation = (baseEl, opts) => {
     const { event: ev, size, trigger, reference, side, align } = opts;
     const doc = baseEl.ownerDocument;
     const isRTL = doc.dir === 'rtl';
-    const bodyWidth = doc.defaultView.innerWidth;
-    const bodyHeight = doc.defaultView.innerHeight;
+    // Patched: use document.body.clientXXX instead of doc.defaultView.innerXXXX because the latter doesn't return the correct
+    // dimensions when the `zoom` CSS property is being used.
+    const bodyWidth = document.body.clientWidth;
+    const bodyHeight = document.body.clientHeight;
     const root = helpers.getElementRoot(baseEl);
     const contentEl = root.querySelector('.popover-content');
     const referenceSizeEl = trigger || ((_a = ev === null || ev === void 0 ? void 0 : ev.detail) === null || _a === void 0 ? void 0 : _a.ionShadowTarget) || (ev === null || ev === void 0 ? void 0 : ev.target);
diff --git a/node_modules/@ionic/core/dist/collection/components/item/item.js b/node_modules/@ionic/core/dist/collection/components/item/item.js
index 5bcc20e..ba8f46f 100644
--- a/node_modules/@ionic/core/dist/collection/components/item/item.js
+++ b/node_modules/@ionic/core/dist/collection/components/item/item.js
@@ -139,7 +139,7 @@ export class Item {
     // inputs, then those need to individually get each click
     hasCover() {
         const inputs = this.el.querySelectorAll('ion-checkbox, ion-datetime, ion-select, ion-radio');
-        return inputs.length === 1 && !this.multipleInputs;
+        return inputs.length === 1;
     }
     // If the item has an href or button property it will render a native
     // anchor or button that is clickable
diff --git a/node_modules/@ionic/core/dist/collection/components/popover/animations/ios.enter.js b/node_modules/@ionic/core/dist/collection/components/popover/animations/ios.enter.js
index 84b30ff..528af87 100644
--- a/node_modules/@ionic/core/dist/collection/components/popover/animations/ios.enter.js
+++ b/node_modules/@ionic/core/dist/collection/components/popover/animations/ios.enter.js
@@ -14,8 +14,10 @@ export const iosEnterAnimation = (baseEl, opts) => {
     const { event: ev, size, trigger, reference, side, align } = opts;
     const doc = baseEl.ownerDocument;
     const isRTL = doc.dir === 'rtl';
-    const bodyWidth = doc.defaultView.innerWidth;
-    const bodyHeight = doc.defaultView.innerHeight;
+    // Patched: use document.body.clientXXX instead of doc.defaultView.innerXXXX because the latter doesn't return the correct
+    // dimensions when the `zoom` CSS property is being used.
+    const bodyWidth = document.body.clientWidth;
+    const bodyHeight = document.body.clientHeight;
     const root = getElementRoot(baseEl);
     const contentEl = root.querySelector('.popover-content');
     const arrowEl = root.querySelector('.popover-arrow');
diff --git a/node_modules/@ionic/core/dist/collection/components/popover/animations/md.enter.js b/node_modules/@ionic/core/dist/collection/components/popover/animations/md.enter.js
index 603923a..ff10a25 100644
--- a/node_modules/@ionic/core/dist/collection/components/popover/animations/md.enter.js
+++ b/node_modules/@ionic/core/dist/collection/components/popover/animations/md.enter.js
@@ -14,8 +14,10 @@ export const mdEnterAnimation = (baseEl, opts) => {
     const { event: ev, size, trigger, reference, side, align } = opts;
     const doc = baseEl.ownerDocument;
     const isRTL = doc.dir === 'rtl';
-    const bodyWidth = doc.defaultView.innerWidth;
-    const bodyHeight = doc.defaultView.innerHeight;
+    // Patched: use document.body.clientXXX instead of doc.defaultView.innerXXXX because the latter doesn't return the correct
+    // dimensions when the `zoom` CSS property is being used.
+    const bodyWidth = document.body.clientWidth;
+    const bodyHeight = document.body.clientHeight;
     const root = getElementRoot(baseEl);
     const contentEl = root.querySelector('.popover-content');
     const referenceSizeEl = trigger || ((_a = ev === null || ev === void 0 ? void 0 : ev.detail) === null || _a === void 0 ? void 0 : _a.ionShadowTarget) || (ev === null || ev === void 0 ? void 0 : ev.target);
diff --git a/node_modules/@ionic/core/dist/esm/ion-item_8.entry.js b/node_modules/@ionic/core/dist/esm/ion-item_8.entry.js
index 215918e..b83a6b1 100644
--- a/node_modules/@ionic/core/dist/esm/ion-item_8.entry.js
+++ b/node_modules/@ionic/core/dist/esm/ion-item_8.entry.js
@@ -135,7 +135,7 @@ const Item = class {
     // inputs, then those need to individually get each click
     hasCover() {
         const inputs = this.el.querySelectorAll('ion-checkbox, ion-datetime, ion-select, ion-radio');
-        return inputs.length === 1 && !this.multipleInputs;
+        return inputs.length === 1;
     }
     // If the item has an href or button property it will render a native
     // anchor or button that is clickable
diff --git a/node_modules/@ionic/core/dist/esm/ion-popover.entry.js b/node_modules/@ionic/core/dist/esm/ion-popover.entry.js
index e651930..a5147b6 100644
--- a/node_modules/@ionic/core/dist/esm/ion-popover.entry.js
+++ b/node_modules/@ionic/core/dist/esm/ion-popover.entry.js
@@ -764,8 +764,10 @@ const iosEnterAnimation = (baseEl, opts) => {
     const { event: ev, size, trigger, reference, side, align } = opts;
     const doc = baseEl.ownerDocument;
     const isRTL = doc.dir === 'rtl';
-    const bodyWidth = doc.defaultView.innerWidth;
-    const bodyHeight = doc.defaultView.innerHeight;
+    // Patched: use document.body.clientXXX instead of doc.defaultView.innerXXXX because the latter doesn't return the correct
+    // dimensions when the `zoom` CSS property is being used.
+    const bodyWidth = document.body.clientWidth;
+    const bodyHeight = document.body.clientHeight;
     const root = getElementRoot(baseEl);
     const contentEl = root.querySelector('.popover-content');
     const arrowEl = root.querySelector('.popover-arrow');
@@ -885,8 +887,10 @@ const mdEnterAnimation = (baseEl, opts) => {
     const { event: ev, size, trigger, reference, side, align } = opts;
     const doc = baseEl.ownerDocument;
     const isRTL = doc.dir === 'rtl';
-    const bodyWidth = doc.defaultView.innerWidth;
-    const bodyHeight = doc.defaultView.innerHeight;
+    // Patched: use document.body.clientXXX instead of doc.defaultView.innerXXXX because the latter doesn't return the correct
+    // dimensions when the `zoom` CSS property is being used.
+    const bodyWidth = document.body.clientWidth;
+    const bodyHeight = document.body.clientHeight;
     const root = getElementRoot(baseEl);
     const contentEl = root.querySelector('.popover-content');
     const referenceSizeEl = trigger || ((_a = ev === null || ev === void 0 ? void 0 : ev.detail) === null || _a === void 0 ? void 0 : _a.ionShadowTarget) || (ev === null || ev === void 0 ? void 0 : ev.target);
diff --git a/node_modules/@ionic/core/hydrate/index.js b/node_modules/@ionic/core/hydrate/index.js
index e83d43d..65f0732 100644
--- a/node_modules/@ionic/core/hydrate/index.js
+++ b/node_modules/@ionic/core/hydrate/index.js
@@ -18034,7 +18034,7 @@ class Item {
     // inputs, then those need to individually get each click
     hasCover() {
         const inputs = this.el.querySelectorAll('ion-checkbox, ion-datetime, ion-select, ion-radio');
-        return inputs.length === 1 && !this.multipleInputs;
+        return inputs.length === 1;
     }
     // If the item has an href or button property it will render a native
     // anchor or button that is clickable
@@ -26948,8 +26948,10 @@ const iosEnterAnimation$1 = (baseEl, opts) => {
     const { event: ev, size, trigger, reference, side, align } = opts;
     const doc = baseEl.ownerDocument;
     const isRTL = doc.dir === 'rtl';
-    const bodyWidth = doc.defaultView.innerWidth;
-    const bodyHeight = doc.defaultView.innerHeight;
+    // Patched: use document.body.clientXXX instead of doc.defaultView.innerXXXX because the latter doesn't return the correct
+    // dimensions when the `zoom` CSS property is being used.
+    const bodyWidth = document.body.clientWidth;
+    const bodyHeight = document.body.clientHeight;
     const root = getElementRoot(baseEl);
     const contentEl = root.querySelector('.popover-content');
     const arrowEl = root.querySelector('.popover-arrow');
@@ -27069,8 +27071,10 @@ const mdEnterAnimation$1 = (baseEl, opts) => {
     const { event: ev, size, trigger, reference, side, align } = opts;
     const doc = baseEl.ownerDocument;
     const isRTL = doc.dir === 'rtl';
-    const bodyWidth = doc.defaultView.innerWidth;
-    const bodyHeight = doc.defaultView.innerHeight;
+    // Patched: use document.body.clientXXX instead of doc.defaultView.innerXXXX because the latter doesn't return the correct
+    // dimensions when the `zoom` CSS property is being used.
+    const bodyWidth = document.body.clientWidth;
+    const bodyHeight = document.body.clientHeight;
     const root = getElementRoot(baseEl);
     const contentEl = root.querySelector('.popover-content');
     const referenceSizeEl = trigger || ((_a = ev === null || ev === void 0 ? void 0 : ev.detail) === null || _a === void 0 ? void 0 : _a.ionShadowTarget) || (ev === null || ev === void 0 ? void 0 : ev.target);
diff --git a/node_modules/@ionic/core/hydrate/index.mjs b/node_modules/@ionic/core/hydrate/index.mjs
index 7dab4fc..08679d7 100644
--- a/node_modules/@ionic/core/hydrate/index.mjs
+++ b/node_modules/@ionic/core/hydrate/index.mjs
@@ -18032,7 +18032,7 @@ class Item {
     // inputs, then those need to individually get each click
     hasCover() {
         const inputs = this.el.querySelectorAll('ion-checkbox, ion-datetime, ion-select, ion-radio');
-        return inputs.length === 1 && !this.multipleInputs;
+        return inputs.length === 1;
     }
     // If the item has an href or button property it will render a native
     // anchor or button that is clickable
@@ -26946,8 +26946,10 @@ const iosEnterAnimation$1 = (baseEl, opts) => {
     const { event: ev, size, trigger, reference, side, align } = opts;
     const doc = baseEl.ownerDocument;
     const isRTL = doc.dir === 'rtl';
-    const bodyWidth = doc.defaultView.innerWidth;
-    const bodyHeight = doc.defaultView.innerHeight;
+    // Patched: use document.body.clientXXX instead of doc.defaultView.innerXXXX because the latter doesn't return the correct
+    // dimensions when the `zoom` CSS property is being used.
+    const bodyWidth = document.body.clientWidth;
+    const bodyHeight = document.body.clientHeight;
     const root = getElementRoot(baseEl);
     const contentEl = root.querySelector('.popover-content');
     const arrowEl = root.querySelector('.popover-arrow');
@@ -27067,8 +27069,10 @@ const mdEnterAnimation$1 = (baseEl, opts) => {
     const { event: ev, size, trigger, reference, side, align } = opts;
     const doc = baseEl.ownerDocument;
     const isRTL = doc.dir === 'rtl';
-    const bodyWidth = doc.defaultView.innerWidth;
-    const bodyHeight = doc.defaultView.innerHeight;
+    // Patched: use document.body.clientXXX instead of doc.defaultView.innerXXXX because the latter doesn't return the correct
+    // dimensions when the `zoom` CSS property is being used.
+    const bodyWidth = document.body.clientWidth;
+    const bodyHeight = document.body.clientHeight;
     const root = getElementRoot(baseEl);
     const contentEl = root.querySelector('.popover-content');
     const referenceSizeEl = trigger || ((_a = ev === null || ev === void 0 ? void 0 : ev.detail) === null || _a === void 0 ? void 0 : _a.ionShadowTarget) || (ev === null || ev === void 0 ? void 0 : ev.target);
